{"version":3,"sources":["../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/editorStyles.js","../../src/Components/CustomLink.js","../../src/Components/VariableComponent.js","../../src/constants.js","../../src/decorator.js","../../src/utils.js","../../src/Components/MaterialModal.js","../../src/utilsStyles.js","../../src/Components/LinkPopper.js","../../src/Components/EditorToolbar.js","../../src/Components/BlockButton.js","../../src/Components/Editor.js","App.js","index.js"],"names":["b","Symbol","for","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","type","A","getOwnPropertySymbols","module","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","props","propName","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","theme","editor","backgroundColor","border","borderRadius","transition","marginLeft","zIndex9","zIndex","error","boxShadow","editorIcon","padding","blockIcon","minWidth","blockIconText","display","enabled","link","color","textDecoration","linkCard","maxWidth","linkCardContent","paddingBottom","editorToolbar","minHeight","borderTop","toolbarLink","whiteSpace","textOverflow","verticalAlign","overflow","inlineBlock","variable","blacklistedVariable","removeScroll","maxHeight","editorRoot","fontSize","lineHeight","margin","marginRight","fontFamily","overflowY","CustomLink","url","href","className","rel","target","children","classes","contentState","entityKey","withStyles","VariableComponent","blacklisted","baseComponent","classNames","title","EDITOR_BLOCK_TYPES","linkPopperInitialValues","text","EDITOR_INLINE_STYLES","EDITOR_KEYBOARD_STATUS","ENTITY_TYPES","BLOCK_BUTTON_GROUP","tooltip","ERROR_MESSAGES","findEntities","contentBlock","character","strategy","component","snakeCaseToSentence","query","isStringEmpty","value","getLinksInsideBlock","links","start","end","linksInsideSelection","selection","selectionState","linkPositions","currentContent","blockArray","Array","entities","anchorKey","focusKey","focus","inside","key","getLinkPositions","selectionStart","selectionEnd","linkPosition","rangeA","rangeB","intersection","hasRangeIntersection","blockKeyList","present","entity","validateLinkInsert","errors","linkRegex","updateSelection","editorState","currentSelection","updatedState","EditorState","getUrlFromEntity","defaultValue","urlEntity","isMultiLineSelection","selectionToObject","selectionObj","MaterialModal","overFlowYVisible","modalLabel","modalDescription","customClasses","paperClasses","open","fullScreen","onClose","keepMounted","scroll","fullWidth","aria-labelledby","aria-describedby","id","disableTypography","modalHeading","onClick","handleClose","actionChildren","show","fontWeight","textAlign","wordBreak","modalTitle","justifyContent","alignItems","dialogContent","yOverflowVisible","videoWrapper","height","position","videoContainer","top","left","width","pT20","paddingTop","p10","paginationBtn","boxSizing","letterSpacing","paginationBtnSelected","paginationBtnDisabled","blackStar","fill","errorStar","helpIcon","marginBottom","customExpansionSummary","background","tagChip","circleRoot","flexGrow","marginTop","rankingCircleDiv","rankingCircleText","bottomCircle","summaryContentPadding","disabledCustomExpansion","disabledCustomExpansionSummary","opacity","alert","alertIcon","selectedDisableColor","stretch","welcomeHeading","blankLine","primaryColor","secondaryColor","textFieldColor","LinkPopper","initialValues","closeModal","resetForm","handleFormSubmit","submit","anchorEl","disablePortal","TransitionProps","enableReinitialize","onSubmit","validate","submitCount","onClickAway","e","container","spacing","item","xs","label","onChange","handleChange","handleSubmit","EditorToolbar","anchorOffset","focusOffset","selectedEntityKey","currentContentBlock","getLinkAtCursor","useState","variant","align","showTooltip","disableRipple","onMouseDown","setShowTooltip","onMouseEnter","onMouseLeave","root","toggleScroll","BlockButton","selectedBlockType","setBlockType","memo","constructor","chars","pastedBlocks","ContentState","newState","Modifier","insertText","getDefaultKeyBinding","event","RichUtils","currentTarget","linksInsideBlock","blockPosition","selectedState","range","positionList","sortedLinksPositions","setKeyIfNull","overlap","getFirstLinkInRange","state","showPopper","linkInitialValues","contentStateWithEntity","encoded","targetString","newEditorState","length","showVariableModal","blockMap","SelectionState","newEditorStateSelection","targetOffset","componentDidCatch","console","render","this","borderLess","classList","isBold","isItalic","isUnderline","disabled","getSelection","isCollapsed","variables","Boolean","blockButton","ref","onBlur","keyBindingFn","handleKeyCommand","handleBeforeInput","handlePastedText","readOnly","handleDrop","spellCheck","button","React","CustomEditor","maxLength","showHeadingButtons","App","errorInfo","log","Editor","setState","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e8d6aa2.chunk.js","sourcesContent":["/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export default theme => ({\n    editor: {\n        backgroundColor: '#fff',\n        border: '1px solid rgba(0, 0, 0, 0.12)',\n        borderRadius: '4px',\n        transition: 'box-shadow 750ms',\n        '& .public-DraftStyleDefault-ol': {\n            marginLeft: '16px'\n        }\n    },\n    zIndex9: {\n        zIndex: '9'\n    },\n    error: {\n        boxShadow: '0px 0px 0px 2px #f44336'\n    },\n    editorIcon: {\n        borderRadius: '0%',\n        [theme.breakpoints.down('sm')]: {\n            padding: '5px 7px'\n        }\n    },\n    blockIcon: {\n        padding: '12px',\n        minWidth: 'auto',\n        borderRadius: '0%',\n        [theme.breakpoints.down('sm')]: {\n            padding: '5px 7px'\n        },\n        color: 'rgba(0, 0, 0, 0.54)'\n    },\n    blockIconText: {\n        display: 'inline-block'\n    },\n    enabled: {\n        borderRadius: '0%',\n        backgroundColor: 'rgba(0, 0, 0, 0.17)'\n    },\n    link: {\n        color: '#3b5998',\n        textDecoration: 'underline'\n    },\n    linkCard: {\n        maxWidth: '300px'\n    },\n    linkCardContent: {\n        paddingBottom: '16px !important'\n    },\n    editorToolbar: {\n        minHeight: '48px',\n        padding: '0 0 0 5px',\n        borderTop: '1px solid rgba(0, 0, 0, 0.12)'\n    },\n    toolbarLink: {\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        maxWidth: '250px',\n        overflow: 'hidden'\n    },\n    inlineBlock: {\n        display: 'inline-block'\n    },\n    variable: {\n        border: '1px #25aae1 solid',\n        backgroundColor: '#25aae1',\n        color: 'white',\n        padding: '0 10px',\n        borderRadius: '15px'\n    },\n    blacklistedVariable: {\n        border: '1px #ff9800 solid',\n        backgroundColor: '#ff9800'\n    },\n    removeScroll: {\n        '& .DraftEditor-editorContainer > div': {\n            maxHeight: 'none'\n        }\n    },\n    editorRoot: {\n        '& .DraftEditor-root': {\n            backgroundColor: 'white'\n        },\n\n        '& .DraftEditor-editorContainer': {\n            padding: '0 15px'\n        },\n\n        '& .DraftEditor-editorContainer>div': {\n            fontSize: '13px',\n            lineHeight: '27px'\n        },\n\n        '@media screen and (min-width: 960px)': {\n            '& .DraftEditor-editorContainer>div': {\n                fontSize: '16px',\n                lineHeight: '32px'\n            }\n        },\n\n        '@media (max-width: 600px)': {\n            '& .DraftEditor-editorContainer button': {\n                padding: 9\n            }\n        },\n\n        '& .DraftEditor-editorContainer > div': {\n            margin: '20px',\n            marginLeft: '0px',\n            marginRight: '0px',\n\n            minHeight: '50px',\n            maxHeight: '150px',\n\n            color: '#172b4d',\n            lineHeight: 'normal',\n            fontFamily: \"'Open Sans', sans-serif'\",\n            overflowY: 'auto',\n            border: 'none',\n            padding: '0px'\n        }\n    }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport editorStyles from '../editorStyles';\n\nconst CustomLink = props => {\n    const { url } = props.contentState.getEntity(props.entityKey).getData();\n    return (\n        <a href={url} className={props.classes.link} rel=\"noopener noreferrer\" target=\"_blank\">\n            {props.children}\n        </a>\n    );\n};\n\nCustomLink.propTypes = {\n    children: PropTypes.array,\n    classes: PropTypes.object.isRequired,\n    contentState: PropTypes.object.isRequired,\n    entityKey: PropTypes.string.isRequired\n};\n\nCustomLink.defaultProps = {\n    children: null\n};\n\nexport default withStyles(editorStyles)(CustomLink);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport editorStyles from '../editorStyles';\n\nconst VariableComponent = props => {\n    const { contentState, entityKey, classes, children } = props;\n    const entity = contentState.getEntity(entityKey);\n\n    const data = entity.getData();\n    const { blacklisted = false } = data;\n\n    const baseComponent = (\n        <span\n            className={classNames({\n                [classes.variable]: true,\n                [classes.blacklistedVariable]: blacklisted\n            })}\n        >\n            {children}\n        </span>\n    );\n\n    if (blacklisted) {\n        return <Tooltip title=\"Variable not available\">{baseComponent}</Tooltip>;\n    }\n\n    return baseComponent;\n};\n\nVariableComponent.propTypes = {\n    children: PropTypes.array,\n    classes: PropTypes.object.isRequired,\n    contentState: PropTypes.object.isRequired,\n    entityKey: PropTypes.string.isRequired\n};\n\nVariableComponent.defaultProps = {\n    children: null\n};\n\nexport default withStyles(editorStyles)(VariableComponent);\n","export const EDITOR_BLOCK_TYPES = {\n    UnorderedList: 'unordered-list-item',\n    OrderedList: 'ordered-list-item',\n    Paragraph: 'unstyled',\n    HeadingOne: 'header-one',\n    HeadingTwo: 'header-two',\n    HeadingThree: 'header-three',\n    HeadingFour: 'header-four',\n    HeadingFive: 'header-five',\n    HeadingSix: 'header-six'\n};\n\nexport const linkPopperInitialValues = {\n    text: '',\n    link: ''\n};\n\nexport const EDITOR_INLINE_STYLES = {\n    Bold: 'BOLD',\n    Italic: 'ITALIC',\n    Underline: 'UNDERLINE'\n};\n\nexport const EDITOR_KEYBOARD_STATUS = {\n    Handled: 'handled',\n    NotHandled: 'not-handled'\n};\n\nexport const ENTITY_TYPES = {\n    LINK: 'LINK',\n    VARIABLE: 'VARIABLE'\n};\n\nexport const BLOCK_BUTTON_GROUP = [\n    {\n        type: EDITOR_BLOCK_TYPES.Paragraph,\n        text: 'P',\n        tooltip: 'Paragraph'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingOne,\n        text: 'H1',\n        tooltip: 'Heading One'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingTwo,\n        text: 'H2',\n        tooltip: 'Heading Two'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingThree,\n        text: 'H3',\n        tooltip: 'Heading Three'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingFour,\n        text: 'H4',\n        tooltip: 'Heading Four'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingFive,\n        text: 'H5',\n        tooltip: 'Heading Five'\n    },\n    {\n        type: EDITOR_BLOCK_TYPES.HeadingSix,\n        text: 'H6',\n        tooltip: 'Heading Six'\n    }\n];\n\nexport const ERROR_MESSAGES = {\n    FIELD_REQUIRED: 'Required'\n};\n","import { CompositeDecorator } from 'draft-js';\n\nimport CustomLink from './Components/CustomLink';\nimport VariableComponent from './Components/VariableComponent';\nimport { ENTITY_TYPES } from './constants';\n\nconst findEntities = type => (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n        return entityKey !== null && contentState.getEntity(entityKey).getType() === type;\n    }, callback);\n};\n\nexport default new CompositeDecorator([\n    {\n        strategy: findEntities(ENTITY_TYPES.LINK),\n        component: CustomLink\n    },\n    {\n        strategy: findEntities(ENTITY_TYPES.VARIABLE),\n        component: VariableComponent\n    }\n]);\n","import { EditorState, ContentState, SelectionState, RichUtils, Modifier } from 'draft-js';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport { stateToHTML } from 'draft-js-export-html';\n\nimport decorator from './decorator';\nimport { ERROR_MESSAGES, ENTITY_TYPES } from './constants';\n\nexport const snakeCaseToSentence = text => {\n    let query = text.replace(/_/g, ' ');\n    query = query.replace(/ ([a-z])/g, c => c.toUpperCase());\n    return query.charAt(0).toUpperCase() + query.slice(1);\n};\n\nexport const isStringEmpty = value => (value ? !value.trim() : true);\n\nexport const hasRangeIntersection = (rangeA, rangeB) => {\n    let intersection = false;\n\n    if (rangeA.start < rangeB.start && rangeA.end > rangeB.end) {\n        intersection = true;\n    }\n\n    if (rangeA.start > rangeB.start && rangeA.start < rangeB.end) {\n        intersection = true;\n    }\n\n    if (rangeA.end < rangeB.end && rangeA.end > rangeB.start) {\n        intersection = true;\n    }\n\n    return intersection;\n};\n\nexport const createEmptyEditor = () => EditorState.createEmpty(decorator);\n\nexport const isEditorEmpty = content => isStringEmpty(content.getCurrentContent().getPlainText());\n\nexport const getLinksInsideBlock = (contentState, contentBlock) => {\n    const links = {};\n\n    contentBlock.findEntityRanges(\n        character => {\n            const entityKey = character.getEntity();\n            return entityKey !== null && contentState.getEntity(entityKey).getType() === ENTITY_TYPES.LINK;\n        },\n        (start, end) => {\n            links[contentBlock.getEntityAt(start)] = { start, end };\n        }\n    );\n\n    return links;\n};\n\nexport const getAllEntites = value => {\n    const currentContent = value.getCurrentContent();\n    const blockArray = Array.from(currentContent.getBlockMap());\n    const entities = {};\n\n    blockArray.forEach(([key, currentContentBlock]) => {\n        const blockEntities = {};\n\n        currentContentBlock.findEntityRanges(\n            character => {\n                const entityKey = character.getEntity();\n                return entityKey !== null;\n            },\n            (start, end) => {\n                const entityKey = currentContentBlock.getEntityAt(start);\n                const selectedEntity = currentContent.getEntity(entityKey);\n\n                blockEntities[currentContentBlock.getEntityAt(start)] = {\n                    block: key,\n                    key: entityKey,\n                    start,\n                    end,\n                    type: selectedEntity.getType(),\n                    data: selectedEntity.getData()\n                };\n            }\n        );\n\n        entities[key] = Object.values(blockEntities);\n    });\n\n    return entities;\n};\n\nconst getLinkPositions = (value, selection) => {\n    const currentContent = value.getCurrentContent();\n    const blockArray = Array.from(currentContent.getBlockMap());\n    const entities = {};\n\n    const selectionState = selection || value.getSelection();\n    const anchorKey = selectionState.getAnchorKey();\n    const focusKey = selectionState.getFocusKey();\n\n    let focus = false;\n\n    /* ========= THE FILTER BELOW IS RESPONSIBLE FOR GETTING ONLY THOSE BLOCKS WHICH FALL WITHIN SELECTION ========== */\n    blockArray\n        .filter(([key]) => {\n            let inside = false;\n\n            if (key === anchorKey || key === focusKey) {\n                if (focus) {\n                    inside = true;\n                    focus = false;\n                } else {\n                    focus = true;\n                }\n            }\n\n            if (focus) {\n                inside = true;\n            }\n\n            return inside;\n        })\n        .forEach(([key, currentContentBlock]) => {\n            entities[key] = Object.values(getLinksInsideBlock(currentContent, currentContentBlock));\n        });\n\n    return entities;\n};\n\nexport const linksInsideSelection = (value, selection) => {\n    const selectionState = selection || value.getSelection();\n\n    const linkPositions = getLinkPositions(value, selectionState);\n    let selectionStart = selectionState.getAnchorOffset();\n    let selectionEnd = selectionState.getFocusOffset();\n    let anchorKey = selectionState.getAnchorKey();\n    let focusKey = selectionState.getFocusKey();\n\n    if (anchorKey === focusKey) {\n        if (selectionStart > selectionEnd) {\n            [selectionStart, selectionEnd] = [selectionEnd, selectionStart];\n        }\n\n        return linkPositions[anchorKey].some(linkPosition =>\n            hasRangeIntersection(linkPosition, { start: selectionStart, end: selectionEnd })\n        );\n    }\n\n    const blockKeyList = Object.keys(linkPositions);\n    if (blockKeyList.indexOf(anchorKey) > blockKeyList.indexOf(focusKey)) {\n        [anchorKey, focusKey] = [focusKey, anchorKey];\n        [selectionStart, selectionEnd] = [selectionEnd, selectionStart];\n    }\n\n    let present = false;\n\n    Object.entries(linkPositions).forEach(([key, entities]) => {\n        if (key === anchorKey) {\n            entities.forEach(entity => {\n                if (entity.start >= selectionStart) {\n                    present = true;\n                }\n            });\n        } else if (key === focusKey) {\n            entities.forEach(entity => {\n                if (entity.end <= selectionEnd) {\n                    present = true;\n                }\n            });\n        } else {\n            present = true;\n        }\n    });\n\n    return present;\n};\n\nexport const listAllEntities = editorState => {\n    // A FUNCTION USEFUL FOR DEBUGGING ONLY\n    const entityKeyList = [];\n    const contentBlockList = Array.from(editorState.getCurrentContent().getBlockMap().values());\n    contentBlockList.forEach(contentBlock =>\n        contentBlock.findEntityRanges(charMetaData => {\n            const entityKey = charMetaData.getEntity();\n            entityKeyList.push(entityKey);\n        })\n    );\n\n    return entityKeyList;\n};\n\nconst transformTextToLink = (editorState, url, selection) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(ENTITY_TYPES.LINK, 'MUTABLE', { url });\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, { currentContent: contentStateWithEntity });\n\n    const linkSelection = selection || newEditorState.getSelection();\n    const linkedState = RichUtils.toggleLink(newEditorState, linkSelection, entityKey);\n\n    return linkedState;\n};\n\nconst convertTextToLinks = value => {\n    let finalState = value;\n\n    const currentContent = value.getCurrentContent();\n    const blockMap = currentContent.getBlockMap();\n    const contentBlocks = Array.from(blockMap.values());\n\n    contentBlocks.forEach(contentBlock => {\n        const key = contentBlock.getKey();\n        const text = contentBlock.getText();\n        // eslint-disable-next-line max-len\n        const urlRegex =\n            /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/gm;\n\n        const urlMatches = Array.from(text.matchAll(urlRegex) || []);\n        urlMatches.forEach(match => {\n            const locationProps = {\n                anchorKey: key,\n                focusKey: key,\n                anchorOffset: match.index,\n                focusOffset: match.index + match[0].length\n            };\n\n            let linkLocation = SelectionState.createEmpty();\n            linkLocation = linkLocation.merge(locationProps);\n\n            if (!linksInsideSelection(finalState, linkLocation)) {\n                finalState = transformTextToLink(finalState, match[0], linkLocation);\n            }\n        });\n    });\n\n    EditorState.forceSelection(finalState, value.getSelection());\n    return finalState;\n};\n\nconst unWrapVariables = value => {\n    let proccessed = value.getCurrentContent();\n    const entites = getAllEntites(value);\n\n    Object.keys(entites).forEach(blockKey => {\n        let offset = 0;\n\n        entites[blockKey].forEach(({ start, end, data, type }) => {\n            if (type !== ENTITY_TYPES.VARIABLE) {\n                return;\n            }\n\n            let selection = SelectionState.createEmpty();\n\n            selection = selection.merge({\n                anchorKey: blockKey,\n                focusKey: blockKey,\n                anchorOffset: start + offset,\n                focusOffset: end + offset\n            });\n\n            offset += data.encoded.length - (end - start);\n            proccessed = Modifier.replaceText(proccessed, selection, data.encoded);\n        });\n    });\n\n    return EditorState.set(value, { currentContent: proccessed });\n};\n\nexport const hasInvalidVariables = value => {\n    const entites = getAllEntites(value);\n    let invalidVariablesFound = false;\n\n    Object.keys(entites).forEach(blockKey => {\n        entites[blockKey].forEach(({ data, type }) => {\n            if (type === ENTITY_TYPES.VARIABLE && data.blacklisted) {\n                invalidVariablesFound = true;\n            }\n        });\n    });\n\n    return invalidVariablesFound;\n};\n\nexport const preProcessContent = value => {\n    let processed = convertTextToLinks(value);\n    processed = unWrapVariables(processed);\n    return processed;\n};\n\nexport const wrapVariables = (value, blacklisted = []) => {\n    let contentState = value.getCurrentContent();\n    const blockMap = contentState.getBlockMap();\n    const blockList = Array.from(blockMap);\n\n    blockList.forEach(([key, block]) => {\n        const variableRegex = /{{[a-z_]+?}}/g;\n        const text = block.getText();\n        let offset = 0;\n\n        Array.from(text.matchAll(variableRegex)).forEach(match => {\n            const matchedString = match[0];\n            const start = match.index;\n            const end = match.index + matchedString.length;\n            const snakeCased = matchedString.slice(2, matchedString.length - 2);\n            const word = snakeCaseToSentence(snakeCased);\n\n            let selection = SelectionState.createEmpty();\n            selection = selection.merge({\n                anchorKey: key,\n                focusKey: key,\n                anchorOffset: start + offset,\n                focusOffset: end + offset\n            });\n\n            contentState = contentState.createEntity(ENTITY_TYPES.VARIABLE, 'IMMUTABLE', {\n                encoded: matchedString,\n                blacklisted: blacklisted.includes(snakeCased)\n            });\n\n            const entityKey = contentState.getLastCreatedEntityKey();\n\n            contentState = Modifier.replaceText(contentState, selection, word, undefined, entityKey);\n\n            offset += word.length - matchedString.length;\n        });\n    });\n\n    return EditorState.set(value, { currentContent: contentState });\n};\n\nexport const exportEditor = (content, preProcess = true) => {\n    if (!content) return '';\n\n    let finalContent = content;\n\n    if (preProcess) {\n        finalContent = preProcessContent(finalContent);\n    }\n\n    return escape(stateToHTML(finalContent.getCurrentContent()));\n};\n\nexport const importEditor = (raw, processVariables = true, blacklisted = []) => {\n    try {\n        const editorState = EditorState.createWithContent(stateFromHTML(unescape(raw)), decorator);\n\n        if (processVariables) {\n            return wrapVariables(editorState, blacklisted);\n        }\n\n        return editorState;\n    } catch (error) {\n        console.warn(error.toString(), '\\nLoading Draft JS with plain text');\n        return EditorState.createWithContent(ContentState.createFromText(raw), decorator);\n    }\n};\n\nexport const validateLinkInsert = values => {\n    const errors = {};\n\n    const linkRegex =\n        /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()!@:%_+.~#?&//=]*)/;\n\n    if (isStringEmpty(values.text)) {\n        errors.text = ERROR_MESSAGES.FIELD_REQUIRED;\n    }\n\n    if (isStringEmpty(values.link) || !linkRegex.test(values.link)) {\n        errors.link = ERROR_MESSAGES.FIELD_REQUIRED;\n    }\n\n    return errors;\n};\n\nexport const updateSelection = (editorState, selection = {}) => {\n    const currentSelection = editorState.getSelection();\n    const updatedState = EditorState.forceSelection(editorState, currentSelection.merge(selection));\n    return updatedState;\n};\n\nexport const getUrlFromEntity = (contentState, entityKey, defaultValue = '') => {\n    const urlEntity = contentState.getEntity(entityKey);\n    let url = defaultValue;\n\n    if (urlEntity.type === ENTITY_TYPES.LINK && urlEntity.mutability === 'MUTABLE') {\n        ({ url } = urlEntity.data);\n    }\n\n    return url;\n};\n\nexport const getFirstLinkInRange = (range, linkPositions) => {\n    let key = null;\n    const positionList = [];\n    const selection = { ...range };\n\n    Object.keys(linkPositions).forEach(entityKey => {\n        positionList.push({ ...linkPositions[entityKey], key: entityKey });\n    });\n\n    const sortedLinksPositions = positionList.sort((a, b) => a.start - b.start);\n\n    const setKeyIfNull = value => {\n        if (key) {\n            return;\n        }\n\n        key = value;\n    };\n\n    sortedLinksPositions.forEach(linkPosition => {\n        let overlap = false;\n\n        if (linkPosition.start >= range.start && linkPosition.start <= range.end) {\n            // START IN RANGE\n            setKeyIfNull(linkPosition.key);\n            overlap = true;\n        } else if (linkPosition.end >= range.start && linkPosition.end <= range.end) {\n            // END IN RANGE\n            setKeyIfNull(linkPosition.key);\n            overlap = true;\n        } else if (linkPosition.start <= range.start && linkPosition.end >= range.end) {\n            // RANGE INSIDE LINK\n            setKeyIfNull(linkPosition.key);\n            overlap = true;\n        }\n\n        if (overlap) {\n            if (selection.start > linkPosition.start) {\n                selection.start = linkPosition.start;\n            }\n\n            if (selection.end < linkPosition.end) {\n                selection.end = linkPosition.end;\n            }\n        }\n    });\n\n    return { key, selection };\n};\n\nexport const isMultiLineSelection = editorState => {\n    const selection = editorState.getSelection();\n    return selection.getAnchorKey() !== selection.getFocusKey();\n};\n\nexport const getLinkAtCursor = editorState => {\n    const currentContent = editorState.getCurrentContent();\n    const selection = editorState.getSelection();\n    let link = null;\n\n    if (selection.isCollapsed()) {\n        const anchorOffset = selection.getAnchorOffset();\n        const focusOffset = selection.getFocusOffset();\n\n        const start = anchorOffset > focusOffset ? focusOffset : anchorOffset;\n\n        const currentContentBlock = currentContent.getBlockForKey(selection.getAnchorKey());\n        const selectedEntityKey = currentContentBlock.getEntityAt(start);\n\n        if (selectedEntityKey) {\n            link = getUrlFromEntity(currentContent, selectedEntityKey, null);\n        }\n    }\n\n    return link;\n};\n\nexport const insertText = (editorState, text) => {\n    const contentState = editorState.getCurrentContent();\n    const selectionState = editorState.getSelection();\n\n    const pastedBlocks = ContentState.createFromText(text).blockMap;\n\n    const newState = Modifier.replaceWithFragment(contentState, selectionState, pastedBlocks);\n\n    return EditorState.push(editorState, newState, 'insert-fragment');\n};\n\nexport const selectionToObject = selection => {\n    const selectionObj = {};\n\n    [...selection.entries()].forEach(([key, value]) => {\n        selectionObj[key] = value;\n    });\n\n    return selectionObj;\n};\n\nexport const debugEditor = value => ({\n    entities: getAllEntites(value),\n    selection: selectionToObject(value.getSelection())\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport utilsStyles from '../utilsStyles';\n\nconst MaterialModal = props => {\n    const {\n        classes,\n        show,\n        name,\n        title,\n        keepMounted,\n        maxWidth,\n        fullScreen,\n        actionChildren,\n        children,\n        fullWidth,\n        scroll,\n        overFlowYVisible\n    } = props;\n\n    const modalLabel = `${name}-label`;\n    const modalDescription = `${name}-description`;\n\n    const customClasses = { ...props.customClasses };\n\n    const paperClasses = {\n        [classes.minWidth]: true,\n        [classes.yOverflowVisible]: overFlowYVisible\n    };\n\n    if (customClasses?.paper) {\n        paperClasses[customClasses.paper] = true;\n    }\n\n    customClasses.paper = classNames(paperClasses);\n\n    return (\n        <Dialog\n            open={show}\n            fullScreen={fullScreen}\n            maxWidth={maxWidth}\n            classes={customClasses}\n            onClose={props.handleClose}\n            keepMounted={keepMounted}\n            scroll={scroll}\n            fullWidth={fullWidth}\n            aria-labelledby={modalLabel}\n            aria-describedby={modalDescription}\n        >\n            <DialogTitle id={modalLabel} className={classes.modalTitle} disableTypography>\n                <h2 className={classes.modalHeading}>{title}</h2>\n                <IconButton onClick={props.handleClose}>\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent\n                id={modalDescription}\n                className={classNames({\n                    [classes.yOverflowVisible]: overFlowYVisible,\n                    [classes.dialogContent]: true\n                })}\n            >\n                {children}\n            </DialogContent>\n            {actionChildren && <DialogActions>{actionChildren}</DialogActions>}\n        </Dialog>\n    );\n};\n\nMaterialModal.propTypes = {\n    classes: PropTypes.object.isRequired,\n    customClasses: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.node, PropTypes.array]).isRequired,\n    actionChildren: PropTypes.oneOfType([PropTypes.object, PropTypes.node, PropTypes.array]),\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n    name: PropTypes.string.isRequired,\n    scroll: PropTypes.string,\n    show: PropTypes.bool.isRequired,\n    handleClose: PropTypes.func.isRequired,\n    keepMounted: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    fullScreen: PropTypes.bool,\n    overFlowYVisible: PropTypes.bool\n};\n\nMaterialModal.defaultProps = {\n    keepMounted: false,\n    fullWidth: false,\n    actionChildren: null,\n    maxWidth: 'sm',\n    customClasses: {},\n    scroll: 'body',\n    fullScreen: false,\n    overFlowYVisible: false\n};\n\nexport default withStyles(utilsStyles)(MaterialModal);\n","const primaryColor = '#0F1439';\nconst galleryrio = '#F0F0F0';\n\nexport default theme => ({\n    modalHeading: {\n        fontSize: '1.5rem',\n        fontWeight: '500',\n        overflow: 'hidden',\n        textAlign: 'left',\n        margin: '0',\n        padding: '0',\n        wordBreak: 'break-all',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '1.3rem'\n        }\n    },\n    modalTitle: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    dialogContent: {\n        // padding: '1rem 1.5rem',\n    },\n    yOverflowVisible: {\n        overflowY: 'visible !important'\n    },\n    minWidth: {\n        minWidth: '300px'\n    },\n    videoWrapper: {\n        paddingBottom: '56.25%',\n        height: '0',\n        position: 'relative'\n    },\n    videoContainer: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%'\n    },\n    pT20: {\n        paddingTop: '20px'\n    },\n    p10: {\n        padding: '10px'\n    },\n    paginationBtn: {\n        color: 'rgba(0, 0, 0, 0.87)',\n        height: '32px',\n        margin: '0 1px',\n        padding: '0 6px',\n        fontSize: '0.875rem',\n        minWidth: '32px',\n        boxSizing: 'border-box',\n        textAlign: 'center',\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontWeight: '400',\n        lineHeight: '1.43',\n        letterSpacing: '0.01071em'\n    },\n    paginationBtnSelected: {\n        border: `1px solid ${primaryColor}77`,\n        borderRadius: '4px'\n    },\n    paginationBtnDisabled: {\n        color: 'rgba(0, 0, 0, 0.26)'\n    },\n    blackStar: {\n        fill: '#626262'\n    },\n    errorStar: {\n        fill: '#D32F2F'\n    },\n    helpIcon: {\n        color: theme.palette.secondary.main,\n        fontSize: '1rem !important',\n        marginBottom: '-1px !important',\n        marginLeft: '2px !important'\n    },\n    customExpansionSummary: {\n        borderRadius: '6px',\n        background: galleryrio,\n        minHeight: 'auto !important'\n    },\n    tagChip: {\n        padding: '5px',\n        borderRadius: '4px',\n        display: 'inline-block',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        maxWidth: '100%'\n    },\n    circleRoot: {\n        flexGrow: 1,\n        marginTop: '5px'\n    },\n    rankingCircleDiv: {\n        position: 'relative'\n    },\n    rankingCircleText: {\n        fontSize: '10px',\n        position: 'relative',\n        top: '-2px'\n    },\n    bottomCircle: {\n        position: 'absolute',\n        color: 'silver'\n    },\n    summaryContentPadding: {\n        margin: '5px 0 !important'\n    },\n    disabledCustomExpansion: {\n        backgroundColor: 'transparent !important'\n    },\n    disabledCustomExpansionSummary: {\n        opacity: '1 !important'\n    },\n    alert: {\n        display: 'flex',\n        padding: '6px 16px',\n        fontSize: '0.875rem',\n        fontFamily: 'Roboto',\n        fontWeight: 400,\n        lineHeight: 1.43,\n        borderRadius: 4,\n        alignItems: 'center',\n        color: 'white'\n    },\n    alertIcon: {\n        display: 'flex',\n        opacity: 0.9,\n        padding: '7px 0',\n        fontSize: '22px',\n        marginRight: '12px'\n    },\n    selectedDisableColor: {\n        color: 'grey'\n    },\n    stretch: {\n        color: 'rgb(29, 40, 124)',\n        minHeight: '517px',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 47px',\n        [theme.breakpoints.down('sm')]: {\n            padding: '57px 0 0',\n            minHeight: 'inherit'\n        }\n    },\n    welcomeHeading: {\n        fontWeight: 'bold',\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '3.5rem'\n        }\n    },\n    blankLine: {\n        height: '22px',\n        width: '100%'\n    },\n    primaryColor: {\n        color: 'rgb(29, 40, 124)'\n    },\n    secondaryColor: {\n        color: 'rgba(29, 40, 124, 0.7)'\n    },\n    textFieldColor: {\n        color: 'rgba(0, 0, 0, 0.87)'\n    }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { Formik } from 'formik';\n\nimport editorStyles from '../editorStyles';\nimport { validateLinkInsert } from '../utils';\n\nconst LinkPopper = props => {\n    const { classes, show, anchorEl, handleClose, submit, initialValues } = props;\n\n    const closeModal = resetForm => {\n        resetForm();\n        handleClose();\n    };\n\n    const onClickAway = (e, resetForm) => {\n        if (props.anchorEl.contains(e.target)) return;\n\n        closeModal(resetForm);\n    };\n\n    const handleFormSubmit = (values, { resetForm }) => {\n        submit(values.text, values.link);\n        closeModal(resetForm);\n    };\n\n    return (\n        <Popper open={show} anchorEl={anchorEl} transition disablePortal className={classes.zIndex9}>\n            {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={250}>\n                    <Card className={classes.linkCard}>\n                        <Formik\n                            enableReinitialize\n                            onSubmit={handleFormSubmit}\n                            initialValues={initialValues}\n                            validate={validateLinkInsert}\n                        >\n                            {({ values, handleChange, resetForm, handleSubmit, errors, submitCount }) => (\n                                <ClickAwayListener onClickAway={e => onClickAway(e, resetForm)}>\n                                    <CardContent className={classes.linkCardContent}>\n                                        <Grid container spacing={2}>\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    value={values.text}\n                                                    fullWidth\n                                                    label=\"Text\"\n                                                    name=\"text\"\n                                                    error={submitCount && errors.text}\n                                                    onChange={handleChange}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    value={values.link}\n                                                    fullWidth\n                                                    label=\"Link\"\n                                                    name=\"link\"\n                                                    error={submitCount && errors.link}\n                                                    onChange={handleChange}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6}>\n                                                <Button fullWidth color=\"primary\" onClick={() => closeModal(resetForm)}>\n                                                    Cancel\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={6}>\n                                                <Button fullWidth color=\"primary\" onClick={handleSubmit}>\n                                                    Apply\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                </ClickAwayListener>\n                            )}\n                        </Formik>\n                    </Card>\n                </Fade>\n            )}\n        </Popper>\n    );\n};\n\nLinkPopper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    show: PropTypes.bool.isRequired,\n    anchorEl: PropTypes.object,\n    handleClose: PropTypes.func.isRequired,\n    submit: PropTypes.func.isRequired,\n    initialValues: PropTypes.object.isRequired\n};\n\nLinkPopper.defaultProps = {\n    anchorEl: null\n};\n\nexport default withStyles(editorStyles)(LinkPopper);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { getLinkAtCursor } from '../utils';\nimport editorStyles from '../editorStyles';\n\nconst EditorToolbar = props => {\n    const { classes, value, scroll } = props;\n    const link = getLinkAtCursor(value);\n\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const toggleScroll = () => {\n        props.toggleScroll();\n        setShowTooltip(false);\n    };\n\n    return (\n        <Toolbar className={classes.editorToolbar}>\n            <Grid container spacing={4} alignItems=\"center\" justifyContent=\"flex-start\">\n                <Grid item xs={3}>\n                    <Typography variant=\"caption\">\n                        {`${value.getCurrentContent().getPlainText().length} Characters`}\n                    </Typography>\n                </Grid>\n                <Grid item xs={9} align=\"right\">\n                    {link && (\n                        <span className={classes.toolbarLink}>\n                            <Link target=\"_blank\" href={link}>\n                                {link}\n                            </Link>\n                        </span>\n                    )}\n                    <Tooltip title=\"Toggle Scrolling\" open={showTooltip}>\n                        <IconButton\n                            disableRipple\n                            onMouseDown={toggleScroll}\n                            onMouseEnter={() => setShowTooltip(true)}\n                            onMouseLeave={() => setShowTooltip(false)}\n                            classes={{ root: classes.editorIcon }}\n                        >\n                            {scroll ? <ExpandMoreIcon /> : <ExpandLessIcon />}\n                        </IconButton>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </Toolbar>\n    );\n};\n\nEditorToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired,\n    toggleScroll: PropTypes.func.isRequired,\n    scroll: PropTypes.bool.isRequired\n};\n\nexport default withStyles(editorStyles)(EditorToolbar);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport editorStyles from '../editorStyles';\n\nconst BlockButton = ({ classes, text, type, selectedBlockType, setBlockType, tooltip }) => (\n    <Tooltip title={tooltip}>\n        <Button\n            variant=\"text\"\n            className={classNames({\n                [classes.blockIcon]: true,\n                [classes.enabled]: selectedBlockType === type\n            })}\n            classes={{\n                label: classes.blockIconText\n            }}\n            onMouseDown={e => {\n                e.preventDefault();\n                setBlockType(type);\n            }}\n        >\n            {text}\n        </Button>\n    </Tooltip>\n);\n\nBlockButton.propTypes = {\n    classes: PropTypes.object.isRequired,\n    selectedBlockType: PropTypes.string.isRequired,\n    setBlockType: PropTypes.func.isRequired,\n    type: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    tooltip: PropTypes.string.isRequired\n};\n\nexport default withStyles(editorStyles)(memo(BlockButton));\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport AddIcon from '@material-ui/icons/Add';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { Editor, RichUtils, EditorState, Modifier, SelectionState, getDefaultKeyBinding } from 'draft-js';\n\nimport editorStyles from '../editorStyles';\nimport MaterialModal from './MaterialModal';\nimport LinkPopper from './LinkPopper';\nimport {\n    snakeCaseToSentence,\n    linksInsideSelection,\n    getLinksInsideBlock,\n    updateSelection,\n    getUrlFromEntity,\n    getFirstLinkInRange,\n    isMultiLineSelection,\n    insertText,\n    selectionToObject\n} from '../utils';\nimport 'draft-js/dist/Draft.css';\nimport {\n    linkPopperInitialValues,\n    ENTITY_TYPES,\n    BLOCK_BUTTON_GROUP,\n    EDITOR_BLOCK_TYPES,\n    EDITOR_INLINE_STYLES,\n    EDITOR_KEYBOARD_STATUS\n} from '../constants';\nimport EditorToolbar from './EditorToolbar';\nimport BlockButton from './BlockButton';\n\nclass CustomEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showVariableModal: false,\n            anchorEl: null,\n            showPopper: false,\n            linkInitialValues: linkPopperInitialValues,\n            removeScroll: this.props.removeScroll\n        };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n    }\n\n    handleBeforeInput = chars => {\n        if (this.props.maxLength === -1) return false;\n\n        const totalLength = this.props.value.getCurrentContent().getPlainText().length + chars.length;\n        return totalLength > this.props.maxLength;\n    };\n\n    handlePastedText = text => {\n        if (\n            this.props.maxLength === -1 ||\n            this.props.value.getCurrentContent().getPlainText().length + text.length < this.props.maxLength\n        ) {\n            this.props.onChange(insertText(this.props.value, text));\n        }\n\n        return true;\n    };\n\n    customKeyBinding = e => {\n        if (e.keyCode === 9) {\n            return this.onTab(e);\n        }\n\n        return getDefaultKeyBinding(e);\n    };\n\n    onTab = event => this.props.onChange(RichUtils.onTab(event, this.props.value, 1));\n\n    handleKeyCommand = (command, editorState) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            this.props.onChange(newState);\n            return EDITOR_KEYBOARD_STATUS.Handled;\n        }\n        return EDITOR_KEYBOARD_STATUS.NotHandled;\n    };\n\n    onBoldClick = e => {\n        e.preventDefault();\n        this.props.onChange(RichUtils.toggleInlineStyle(this.props.value, EDITOR_INLINE_STYLES.Bold));\n    };\n\n    onItalicClick = e => {\n        e.preventDefault();\n        this.props.onChange(RichUtils.toggleInlineStyle(this.props.value, EDITOR_INLINE_STYLES.Italic));\n    };\n\n    onUnderlineClick = e => {\n        e.preventDefault();\n        this.props.onChange(RichUtils.toggleInlineStyle(this.props.value, EDITOR_INLINE_STYLES.Underline));\n    };\n\n    onUnorderedListClick = e => {\n        e.preventDefault();\n        this.props.onChange(RichUtils.toggleBlockType(this.props.value, EDITOR_BLOCK_TYPES.UnorderedList));\n    };\n\n    onOrderedListClick = e => {\n        e.preventDefault();\n        this.props.onChange(RichUtils.toggleBlockType(this.props.value, EDITOR_BLOCK_TYPES.OrderedList));\n    };\n\n    onLinkClicked = e => {\n        e.preventDefault();\n        const { currentTarget } = e;\n        const selectionState = this.props.value.getSelection();\n\n        let url = '';\n        let text = '';\n\n        const anchorKey = selectionState.getAnchorKey();\n        const focusKey = selectionState.getFocusKey();\n        let anchorOffset = selectionState.getAnchorOffset();\n        let focusOffset = selectionState.getFocusOffset();\n\n        const currentContent = this.props.value.getCurrentContent();\n        const currentContentBlock = currentContent.getBlockForKey(anchorKey);\n\n        const selectedEntityKey = currentContentBlock.getEntityAt(anchorOffset);\n        const linksInsideBlock = getLinksInsideBlock(currentContent, currentContentBlock);\n\n        if (anchorKey === focusKey) {\n            if (!selectionState.isCollapsed()) {\n                /* ========== SELECTION EXISTS ========== */\n                if (anchorOffset > focusOffset) {\n                    [anchorOffset, focusOffset] = [focusOffset, anchorOffset];\n                }\n\n                const intersection = getFirstLinkInRange({ start: anchorOffset, end: focusOffset }, linksInsideBlock);\n                text = currentContentBlock.getText().substring(anchorOffset, focusOffset);\n\n                if (intersection.key) {\n                    url = getUrlFromEntity(currentContent, intersection.key);\n\n                    const selectedState = updateSelection(this.props.value, {\n                        anchorOffset: intersection.selection.start,\n                        focusOffset: intersection.selection.end\n                    });\n\n                    text = currentContentBlock\n                        .getText()\n                        .substring(intersection.selection.start, intersection.selection.end);\n\n                    this.props.onChange(selectedState);\n                }\n            } else {\n                /* ========== NO SELECTION ========== */\n                const blockPosition = linksInsideBlock[selectedEntityKey];\n\n                if (selectedEntityKey) {\n                    /* ========== CURSOR ON LINK ========== */\n                    url = getUrlFromEntity(currentContent, selectedEntityKey);\n                    text = currentContentBlock.getText().substring(blockPosition.start, blockPosition.end);\n\n                    const selectedState = updateSelection(this.props.value, {\n                        anchorOffset: blockPosition.start,\n                        focusOffset: blockPosition.end\n                    });\n\n                    this.props.onChange(selectedState);\n                }\n            }\n        }\n\n        this.setState(state => ({\n            anchorEl: currentTarget,\n            showPopper: !state.showPopper,\n            linkInitialValues: { text, link: url }\n        }));\n    };\n\n    onRemoveLinkClicked = e => {\n        e.preventDefault();\n        const selection = this.props.value.getSelection();\n        this.props.onChange(RichUtils.toggleLink(this.props.value, selection, null));\n    };\n\n    isBold = () => this.props.value.getCurrentInlineStyle().has(EDITOR_INLINE_STYLES.Bold);\n\n    isItalic = () => this.props.value.getCurrentInlineStyle().has(EDITOR_INLINE_STYLES.Italic);\n\n    isUnderline = () => this.props.value.getCurrentInlineStyle().has(EDITOR_INLINE_STYLES.Underline);\n\n    isBlockType = type => this.props.value.getCurrentInlineStyle().has(type);\n\n    setBlockType = type => this.props.onChange(RichUtils.toggleBlockType(this.props.value, type));\n\n    insertVariable = text => {\n        this.refs.editor.focus();\n\n        const contentState = this.props.value.getCurrentContent();\n        const currentSelection = selectionToObject(this.props.value.getSelection());\n\n        let contentStateWithEntity = contentState.createEntity(ENTITY_TYPES.VARIABLE, 'IMMUTABLE', {\n            encoded: `{{${text}}}`\n        });\n\n        const targetString = snakeCaseToSentence(text);\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n        contentStateWithEntity = Modifier.insertText(\n            contentStateWithEntity,\n            this.props.value.getSelection(),\n            targetString,\n            undefined,\n            entityKey\n        );\n\n        let newEditorState = EditorState.set(this.props.value, { currentContent: contentStateWithEntity });\n        newEditorState = updateSelection(newEditorState, {\n            anchorOffset: currentSelection.anchorOffset + targetString.length,\n            focusOffset: currentSelection.anchorOffset + targetString.length\n        });\n\n        this.setState({ showVariableModal: false }, () => {\n            this.props.onChange(newEditorState);\n        });\n    };\n\n    openAddModal = e => {\n        e.preventDefault();\n        this.setState({ showVariableModal: true });\n    };\n\n    moveCursorToEnd = editorState => {\n        const content = editorState.getCurrentContent();\n        const blockMap = content.getBlockMap();\n\n        let selection = SelectionState.createEmpty();\n        selection = selection.merge({\n            anchorKey: blockMap.last().getKey(),\n            anchorOffset: blockMap.last().getLength(),\n            focusKey: blockMap.last().getKey(),\n            focusOffset: blockMap.last().getLength()\n        });\n\n        return EditorState.forceSelection(editorState, selection);\n    };\n\n    insertLink = (text, link) => {\n        this.setState({\n            anchorEl: null,\n            showPopper: false\n        });\n\n        this.refs.editor.focus();\n\n        const contentState = this.props.value.getCurrentContent();\n        let contentStateWithEntity = contentState.createEntity(ENTITY_TYPES.LINK, 'MUTABLE', { url: link });\n\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n        contentStateWithEntity = Modifier.replaceText(\n            contentStateWithEntity,\n            this.props.value.getSelection(),\n            text,\n            undefined,\n            entityKey\n        );\n\n        let newEditorState = EditorState.set(this.props.value, { currentContent: contentStateWithEntity });\n\n        const newEditorStateSelection = newEditorState.getSelection();\n        const anchorOffset = newEditorStateSelection.getAnchorOffset();\n        const focusOffset = newEditorStateSelection.getFocusOffset();\n        const targetOffset = anchorOffset > focusOffset ? focusOffset : anchorOffset;\n\n        newEditorState = updateSelection(newEditorState, {\n            anchorOffset: targetOffset,\n            focusOffset: targetOffset\n        });\n\n        this.props.onChange(newEditorState);\n    };\n\n    render() {\n        const { classes, error, onBlur, showHeadingButtons, borderLess } = this.props;\n        const { removeScroll } = this.state;\n\n        const classList = [];\n\n        classList.push(classNames({ [classes.editor]: !borderLess }, this.props.className, classes.editorRoot));\n\n        if (error) {\n            classList.push(classes.error);\n        }\n\n        if (removeScroll) {\n            classList.push(classes.removeScroll);\n        }\n\n        const selectionState = this.props.value.getSelection();\n        const anchorKey = selectionState.getAnchorKey();\n\n        const currentContent = this.props.value.getCurrentContent();\n        const currentContentBlock = currentContent.getBlockForKey(anchorKey);\n\n        const selectedBlockType = currentContentBlock.getType();\n\n        return (\n            <div className={classList.join(' ')} name={this.props.name} id=\"editor-root\">\n                {!this.props.readOnly ? (\n                    <React.Fragment>\n                        <Tooltip title=\"Bold\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onBoldClick(e)}\n                                classes={{ root: this.isBold() ? classes.enabled : classes.editorIcon }}\n                            >\n                                <FormatBoldIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Italic\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onItalicClick(e)}\n                                classes={{ root: this.isItalic() ? classes.enabled : classes.editorIcon }}\n                            >\n                                <FormatItalicIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Underline\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onUnderlineClick(e)}\n                                classes={{ root: this.isUnderline() ? classes.enabled : classes.editorIcon }}\n                            >\n                                <FormatUnderlinedIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Unordered List\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onUnorderedListClick(e)}\n                                classes={{ root: classes.editorIcon }}\n                            >\n                                <FormatListBulletedIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Ordered List\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onOrderedListClick(e)}\n                                classes={{ root: classes.editorIcon }}\n                            >\n                                <FormatListNumberedIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Insert Link\">\n                            <IconButton\n                                disableRipple\n                                onMouseDown={e => this.onLinkClicked(e)}\n                                disabled={isMultiLineSelection(this.props.value)}\n                                classes={{ root: classes.editorIcon }}\n                            >\n                                <LinkIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Remove Link\">\n                            <div className={classes.inlineBlock}>\n                                <IconButton\n                                    disableRipple\n                                    onMouseDown={e => this.onRemoveLinkClicked(e)}\n                                    classes={{ root: classes.editorIcon }}\n                                    disabled={\n                                        this.props.value.getSelection().isCollapsed() ||\n                                        linksInsideSelection(this.props.value)\n                                    }\n                                >\n                                    <LinkOffIcon />\n                                </IconButton>\n                            </div>\n                        </Tooltip>\n                        {this.props.variables.length ? (\n                            <Tooltip title=\"Insert Variable\">\n                                <IconButton\n                                    disableRipple\n                                    onMouseDown={e => this.openAddModal(e)}\n                                    classes={{ root: classes.editorIcon }}\n                                    disabled={!this.props.value.getSelection().isCollapsed()}\n                                >\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                        ) : null}\n                        {Boolean(showHeadingButtons) &&\n                            BLOCK_BUTTON_GROUP.map((blockButton, index) => (\n                                <BlockButton\n                                    key={index}\n                                    type={blockButton.type}\n                                    tooltip={blockButton.tooltip}\n                                    text={blockButton.text}\n                                    setBlockType={this.setBlockType}\n                                    selectedBlockType={selectedBlockType}\n                                />\n                            ))}\n                    </React.Fragment>\n                ) : null}\n                <Editor\n                    ref=\"editor\"\n                    onBlur={onBlur}\n                    keyBindingFn={this.customKeyBinding}\n                    handleKeyCommand={this.handleKeyCommand}\n                    editorState={this.props.value}\n                    onChange={this.props.onChange}\n                    handleBeforeInput={this.handleBeforeInput}\n                    handlePastedText={this.handlePastedText}\n                    readOnly={this.props.readOnly}\n                    handleDrop={() => true}\n                    spellCheck\n                />\n                {!this.props.readOnly ? (\n                    <EditorToolbar\n                        value={this.props.value}\n                        toggleScroll={() => this.setState(state => ({ removeScroll: !state.removeScroll }))}\n                        scroll={!removeScroll}\n                    />\n                ) : null}\n                <LinkPopper\n                    initialValues={this.state.linkInitialValues}\n                    show={this.state.showPopper}\n                    anchorEl={this.state.anchorEl}\n                    submit={this.insertLink}\n                    handleClose={() => {\n                        this.setState({\n                            showPopper: false,\n                            anchorEl: null\n                        });\n                        this.refs.editor.focus();\n                    }}\n                />\n                <MaterialModal\n                    title=\"Select Variable\"\n                    name=\"variable-select\"\n                    show={this.state.showVariableModal}\n                    handleClose={() => this.setState({ showVariableModal: false })}\n                >\n                    <List>\n                        {this.props.variables.map(variable => (\n                            <ListItem button key={variable.id} onClick={() => this.insertVariable(variable.key)}>\n                                {snakeCaseToSentence(variable.key)}\n                            </ListItem>\n                        ))}\n                    </List>\n                </MaterialModal>\n            </div>\n        );\n    }\n}\n\nCustomEditor.propTypes = {\n    classes: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    maxLength: PropTypes.number,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    variables: PropTypes.array,\n    error: PropTypes.any,\n    removeScroll: PropTypes.bool,\n    showHeadingButtons: PropTypes.bool,\n    borderLess: PropTypes.bool\n};\n\nCustomEditor.defaultProps = {\n    maxLength: -1,\n    readOnly: false,\n    className: null,\n    onChange: value => value,\n    onBlur: () => {},\n    name: '',\n    variables: [],\n    error: false,\n    removeScroll: false,\n    showHeadingButtons: false,\n    borderLess: false\n};\n\nexport default withStyles(editorStyles)(CustomEditor);\n","import React from 'react'\n\nimport { createEmptyEditor, Editor } from 'material-rte'\nimport 'material-rte/dist/index.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: createEmptyEditor()\n    }\n  }\n\n  componentDidCatch (error, errorInfo) {\n    console.log(error, errorInfo)\n  }\n\n  render() {\n    return <div id=\"example-root\">\n      <h2>Material Editor</h2>\n      <Editor\n        value={this.state.value}\n        onChange={value => this.setState({value})}\n        name=\"content\"\n        removeScroll\n      />\n    </div>\n  }\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}